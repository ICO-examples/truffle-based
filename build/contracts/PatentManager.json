{
  "contractName": "PatentManager",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "deployedPatents",
      "outputs": [
        {
          "name": "_address",
          "type": "address"
        },
        {
          "name": "_owned",
          "type": "bool"
        },
        {
          "name": "_invested",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "transferManagerRights",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "state",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_manager",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "InvestmentsStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "weiAmount",
          "type": "uint256"
        }
      ],
      "name": "Invested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "ManagerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_hash",
          "type": "string"
        },
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_description",
          "type": "string"
        },
        {
          "name": "_author",
          "type": "string"
        },
        {
          "name": "_patentType",
          "type": "uint8"
        }
      ],
      "name": "createPatent",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "enableInvestments",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "invest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x606060405260043610620000af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806346f58ee714620000b4578063478c1e52146200012c578063481c6a75146200014457806359d3af3b146200019c5780638da5cb5b14620001d8578063b6a45a821462000230578063c19d93fb1462000365578063d0e30db014620003a0578063d87aa64314620003ac578063f2fde38b14620003db575b600080fd5b3415620000c057600080fd5b620000d8600480803590602001909190505062000417565b604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183151515158152602001828152602001935050505060405180910390f35b34156200013857600080fd5b620001426200047e565b005b34156200015057600080fd5b6200015a6200052c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3415620001a857600080fd5b620001d6600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505062000552565b005b3415620001e457600080fd5b620001ee6200066e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156200023c57600080fd5b62000363600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803560ff1690602001909190505062000693565b005b34156200037157600080fd5b6200037b62000a5d565b604051808260018111156200038c57fe5b60ff16815260200191505060405180910390f35b620003aa62000a70565b005b3415620003b857600080fd5b620003d9600480803590602001909190803590602001909190505062000aa9565b005b3415620003e757600080fd5b62000415600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505062000cd0565b005b6002818154811015156200042757fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16908060010154905083565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515620004da57600080fd5b60018060146101000a81548160ff02191690836001811115620004f957fe5b02179055507f94329f9760666df3bfe6333a6e7fe6fafef670005252af90430fc12f82ace36060405160405180910390a1565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515620005ae57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a435060405160405180910390a380600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006200069f62000dea565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480620007485750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b15156200075457600080fd5b8686868686336200076462000e24565b80806020018060200180602001806020018760ff1660ff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200185810385528b818151815260200191508051906020019080838360005b83811015620007ed578082015181840152602081019050620007d0565b50505050905090810190601f1680156200081b5780820380516001836020036101000a031916815260200191505b5085810384528a818151815260200191508051906020019080838360005b838110156200085657808201518184015260208101905062000839565b50505050905090810190601f168015620008845780820380516001836020036101000a031916815260200191505b50858103835289818151815260200191508051906020019080838360005b83811015620008bf578082015181840152602081019050620008a2565b50505050905090810190601f168015620008ed5780820380516001836020036101000a031916815260200191505b50858103825288818151815260200191508051906020019080838360005b83811015620009285780820151818401526020810190506200090b565b50505050905090810190601f168015620009565780820380516001836020036101000a031916815260200191505b509a5050505050505050505050604051809103906000f08015156200097a57600080fd5b91506060604051908101604052808373ffffffffffffffffffffffffffffffffffffffff1681526020016000151581526020016000815250905060028054806001018281620009ca919062000e35565b9160005260206000209060020201600083909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff0219169083151502179055506040820151816001015550505050505050505050565b600160149054906101000a900460ff1681565b6000600181111562000a7e57fe5b600160149054906101000a900460ff16600181111562000a9a57fe5b14151562000aa757600080fd5b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562000b0557600080fd5b60018081111562000b1257fe5b600160149054906101000a900460ff16600181111562000b2e57fe5b14151562000b3b57600080fd5b60008111151562000b4b57600080fd5b60003073ffffffffffffffffffffffffffffffffffffffff163111151562000b7257600080fd5b8060028381548110151562000b8357fe5b9060005260206000209060020201600101540160028381548110151562000ba657fe5b90600052602060002090600202016001018190555060028281548110151562000bcb57fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151562000c3d57600080fd5b60028281548110151562000c4d57fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fc3f75dfc78f6efac88ad5abb5e606276b903647d97b2a62a1ef89840a658bbc3826040518082815260200191505060405180910390a25050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151562000d2c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600015158152602001600081525090565b604051610ca28062000ed083390190565b81548183558181151162000e655760020281600202836000526020600020918201910162000e64919062000e6a565b5b505050565b62000ecc91905b8082111562000ec857600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff021916905560018201600090555060020162000e71565b5090565b905600606060405234156200001057600080fd5b60405162000ca238038062000ca283398101604052808051820191906020018051820191906020018051820191906020018051820191906020018051906020019091908051906020019091905050620000686200023e565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515620000e657806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000127565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5060c0604051908101604052808881526020018781526020018681526020018581526020014281526020018460ff1681525090506001805480600101828162000171919062000298565b916000526020600020906006020160008390919091506000820151816000019080519060200190620001a5929190620002cd565b506020820151816001019080519060200190620001c4929190620002cd565b506040820151816002019080519060200190620001e3929190620002cd565b50606082015181600301908051906020019062000202929190620002cd565b506080820151816004015560a08201518160050160006101000a81548160ff021916908360ff1602179055505050505050505050505062000462565b60c0604051908101604052806200025462000354565b81526020016200026362000354565b81526020016200027262000354565b81526020016200028162000354565b815260200160008152602001600060ff1681525090565b815481835581811511620002c857600602816006028360005260206000209182019101620002c7919062000368565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200031057805160ff191683800117855562000341565b8280016001018555821562000341579182015b828111156200034057825182559160200191906001019062000323565b5b509050620003509190620003ee565b5090565b602060405190810160405280600081525090565b620003eb91905b80821115620003e757600080820160006200038b919062000416565b6001820160006200039d919062000416565b600282016000620003af919062000416565b600382016000620003c1919062000416565b60048201600090556005820160006101000a81549060ff0219169055506006016200036f565b5090565b90565b6200041391905b808211156200040f576000816000905550600101620003f5565b5090565b90565b50805460018160011615610100020316600290046000825580601f106200043e57506200045f565b601f0160209004906000526020600020908101906200045e9190620003ee565b5b50565b61083080620004726000396000f300606060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632e1a7d4d146100645780638da5cb5b1461009f578063f2fde38b146100f4578063f422bc681461012d575b005b341561006f57600080fd5b6100856004808035906020019091905050610321565b604051808215151515815260200191505060405180910390f35b34156100aa57600080fd5b6100b261040e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100ff57600080fd5b61012b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610433565b005b341561013857600080fd5b61014e600480803590602001909190505061054c565b60405180806020018060200180602001806020018781526020018660ff1660ff16815260200185810385528b818151815260200191508051906020019080838360005b838110156101ac578082015181840152602081019050610191565b50505050905090810190601f1680156101d95780820380516001836020036101000a031916815260200191505b5085810384528a818151815260200191508051906020019080838360005b838110156102125780820151818401526020810190506101f7565b50505050905090810190601f16801561023f5780820380516001836020036101000a031916815260200191505b50858103835289818151815260200191508051906020019080838360005b8381101561027857808201518184015260208101905061025d565b50505050905090810190601f1680156102a55780820380516001836020036101000a031916815260200191505b50858103825288818151815260200191508051906020019080838360005b838110156102de5780820151818401526020810190506102c3565b50505050905090810190601f16801561030b5780820380516001836020036101000a031916815260200191505b509a505050505050505050505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561037e57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff163182111515156103a457600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050151561040557600080fd5b60019050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561048e57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60018181548110151561055b57fe5b9060005260206000209060060201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106075780601f106105dc57610100808354040283529160200191610607565b820191906000526020600020905b8154815290600101906020018083116105ea57829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106a55780601f1061067a576101008083540402835291602001916106a5565b820191906000526020600020905b81548152906001019060200180831161068857829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107435780601f1061071857610100808354040283529160200191610743565b820191906000526020600020905b81548152906001019060200180831161072657829003601f168201915b505050505090806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107e15780601f106107b6576101008083540402835291602001916107e1565b820191906000526020600020905b8154815290600101906020018083116107c457829003601f168201915b5050505050908060040154908060050160009054906101000a900460ff169050865600a165627a7a7230582018754d14f30f5d69a33dc5c57124a487971954c7be2345343b47609f677ad2bb0029a165627a7a7230582003fe94ef17f9567733adf47418d363589f671cd00ea93278182bc7b9e9f5120b0029",
  "sourceMap": "144:2533:0:-;;;588:258;;;;;;;;;;;;;;;;;;;;;;657:8;384:10:30;361:1:31;337:26;;:12;:26;;;;333:114;;;383:12;375:5;;:20;;;;;;;;;;;;;;;;;;333:114;;;428:10;420:5;;:18;;;;;;;;;;;;;;;;;;333:114;281:170;434:1:30;408:28;;:14;:28;;;;404:122;;;458:14;448:7;;:24;;;;;;;;;;;;;;;;;;404:122;;;507:10;497:7;;:20;;;;;;;;;;;;;;;;;;404:122;330:200;689:12:0;681:5;;:20;;;;;;;;;;;;;;;;;;;;;;;;588:258;144:2533;;;;;;",
  "deployedSourceMap": "144:2533:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;543:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1562:260;;;;;;;;;;;;;;97:22:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;722:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;46:20:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;905:439:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;252:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1350:206;;;;;;1828:386;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;698:137:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;543:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1562:260::-;578:5:31;;;;;;;;;;;564:19;;:10;:19;;;556:28;;;;;;;;1765:15:0;1757:5;;:23;;;;;;;;;;;;;;;;;;;;;;;;1795:20;;;;;;;;;;1562:260::o;97:22:30:-;;;;;;;;;;;;;:::o;722:145::-;578:5:31;;;;;;;;;;;564:19;;:10;:19;;;556:28;;;;;;;;825:10:30;801:35;;816:7;;;;;;;;;;;801:35;;;;;;;;;;;;852:10;842:7;;:20;;;;;;;;;;;;;;;;;;722:145;:::o;46:20:31:-;;;;;;;;;;;;;:::o;905:439:0:-;1042:17;1145:31;;:::i;:::-;583:5:30;;;;;;;;;;;569:19;;:10;:19;;;:44;;;;606:7;;;;;;;;;;;592:21;;:10;:21;;;569:44;561:53;;;;;;;;1073:5:0;1080;1087:12;1101:7;1110:11;1123:10;1062:72;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1062:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1062:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1062:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1062:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1042:92;;1179:115;;;;;;;;;1217:9;1179:115;;;;;;1248:5;1179:115;;;;;;1278:1;1179:115;;;1145:149;;1305:15;:32;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;1326:10;1305:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;905:439;;;;;;;:::o;252:18::-;;;;;;;;;;;;;:::o;1350:206::-;1536:12;1527:21;;;;;;;;:5;;;;;;;;;;;:21;;;;;;;;;1519:30;;;;;;;;1350:206::o;1828:386::-;578:5:31;;;;;;;;;;;564:19;;:10;:19;;;556:28;;;;;;;;1917:15:0;1908:24;;;;;;;;:5;;;;;;;;;;;:24;;;;;;;;;1900:33;;;;;;;;1960:1;1951:6;:10;1943:19;;;;;;;;2004:1;1988:4;1980:21;;;:25;1972:34;;;;;;;;2082:6;2049:15;2065:3;2049:20;;;;;;;;;;;;;;;;;;;;:30;;;:39;2016:15;2032:3;2016:20;;;;;;;;;;;;;;;;;;;;:30;;:72;;;;2099:15;2115:3;2099:20;;;;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:38;;:46;2138:6;2099:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2169:15;2185:3;2169:20;;;;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;2160:47;;;2200:6;2160:47;;;;;;;;;;;;;;;;;;1828:386;;:::o;698:137:31:-;578:5;;;;;;;;;;;564:19;;:10;:19;;;556:28;;;;;;;;799:8;771:37;;792:5;;;;;;;;;;;771:37;;;;;;;;;;;;822:8;814:5;;:16;;;;;;;;;;;;;;;;;;698:137;:::o;144:2533:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.2;\n\nimport \"contracts/math/SafeMath.sol\";\nimport \"contracts/ownership/Managed.sol\";\nimport \"contracts/patent/Patent.sol\";\n\ncontract PatentManager is Managed {\n    using SafeMath for uint;\n\n    enum State { Active, Investing }\n\n    State public state;\n\n    event InvestmentsStarted();\n    event Invested(address indexed beneficiary, uint256 weiAmount);\n\n    //mapping (address => uint256) public deployedPatents;\n\n    struct newPatentData {\n        address _address;\n        bool _owned;\n        uint _invested;\n    }\n\n    newPatentData[] public deployedPatents;\n\n    function PatentManager(address _manager) public payable\n    Managed (_manager)\n    {\n        state = State.Active; // added this because did not find any state changes, by default without this state is not defined but requires Active in functions below\n    }\n\n    // take your data and creates new patent with it\n    function createPatent (string _hash, string _name, string _description, string _author, uint8 _patentType) public onlyManager {\n\n        address newPatent = new Patent(_hash, _name, _description, _author, _patentType, msg.sender);\n\n        newPatentData memory patentInfo = newPatentData({\n            _address: newPatent,\n            _owned: false,\n            _invested: 0\n            });\n\n        deployedPatents.push(patentInfo);\n    }\n\n    function deposit() /*onlyOwner*/ public payable { //commented onlyOwner because there is no other pyable function, and not owner fails here during buying tokens\n        require(state == State.Active);\n    }\n\n    function enableInvestments() onlyOwner public {\n        //require(state == State.Active); // removed this because its useless if state:Active turned on upod invoking constructor function\n        state = State.Investing;\n        emit InvestmentsStarted();\n    }\n\n    function invest(uint256 _id, uint256 _value) public onlyOwner {\n        require(state == State.Investing);\n        require(_value > 0);\n        require(address(this).balance > 0);\n        deployedPatents[_id]._invested = deployedPatents[_id]._invested + _value;\n\n        deployedPatents[_id]._address.transfer(_value);\n        emit Invested(deployedPatents[_id]._address, _value);\n    }\n\n    /**\n     * Withdraw\n     * @param  _beneficiary address to withdraw\n     * @param  _amount uint256 Amount of money\n     */\n    /* function withdraw(address _beneficiary, uint256 _amount) onlyOwner public {\n      require (_beneficiary != address(0));\n      _beneficiary.transfer(_amount);\n    } */\n\n\n    /**\n     * Get vault balance in ether/wei\n     */\n//    function getBalance() public view returns(uint){\n//        return address(this).balance;\n//    }\n}",
  "sourcePath": "/home/rewkha/work/SaveIdeas/saveideas/contract/contracts/PatentManager.sol",
  "ast": {
    "absolutePath": "/home/rewkha/work/SaveIdeas/saveideas/contract/contracts/PatentManager.sol",
    "exportedSymbols": {
      "PatentManager": [
        175
      ]
    },
    "id": 176,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "contracts/math/SafeMath.sol",
        "file": "contracts/math/SafeMath.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 176,
        "sourceUnit": 3273,
        "src": "25:37:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ownership/Managed.sol",
        "file": "contracts/ownership/Managed.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 176,
        "sourceUnit": 3347,
        "src": "63:41:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/patent/Patent.sol",
        "file": "contracts/patent/Patent.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 176,
        "sourceUnit": 3502,
        "src": "105:37:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "Managed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3346,
              "src": "170:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Managed_$3346",
                "typeString": "contract Managed"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "170:7:0"
          }
        ],
        "contractDependencies": [
          3346,
          3408,
          3501
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 175,
        "linearizedBaseContracts": [
          175,
          3346,
          3408
        ],
        "name": "PatentManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9,
            "libraryName": {
              "contractScope": null,
              "id": 7,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3272,
              "src": "190:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3272",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "184:24:0",
            "typeName": {
              "id": 8,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "203:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "PatentManager.State",
            "id": 12,
            "members": [
              {
                "id": 10,
                "name": "Active",
                "nodeType": "EnumValue",
                "src": "227:6:0"
              },
              {
                "id": 11,
                "name": "Investing",
                "nodeType": "EnumValue",
                "src": "235:9:0"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "214:32:0"
          },
          {
            "constant": false,
            "id": 14,
            "name": "state",
            "nodeType": "VariableDeclaration",
            "scope": 175,
            "src": "252:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$12",
              "typeString": "enum PatentManager.State"
            },
            "typeName": {
              "contractScope": null,
              "id": 13,
              "name": "State",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12,
              "src": "252:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$12",
                "typeString": "enum PatentManager.State"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 16,
            "name": "InvestmentsStarted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:2:0"
            },
            "src": "277:27:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 22,
            "name": "Invested",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "indexed": true,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "324:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "353:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "323:48:0"
            },
            "src": "309:63:0"
          },
          {
            "canonicalName": "PatentManager.newPatentData",
            "id": 29,
            "members": [
              {
                "constant": false,
                "id": 24,
                "name": "_address",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "469:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 23,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "469:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "name": "_owned",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "495:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 25,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "495:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "name": "_invested",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "516:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 27,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "516:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "newPatentData",
            "nodeType": "StructDefinition",
            "scope": 175,
            "src": "438:99:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 32,
            "name": "deployedPatents",
            "nodeType": "VariableDeclaration",
            "scope": 175,
            "src": "543:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_newPatentData_$29_storage_$dyn_storage",
              "typeString": "struct PatentManager.newPatentData storage ref[] storage ref"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 30,
                "name": "newPatentData",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 29,
                "src": "543:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_newPatentData_$29_storage_ptr",
                  "typeString": "struct PatentManager.newPatentData storage pointer"
                }
              },
              "id": 31,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "543:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_newPatentData_$29_storage_$dyn_storage_ptr",
                "typeString": "struct PatentManager.newPatentData storage ref[] storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "671:175:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "681:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum PatentManager.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 41,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "689:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                          "typeString": "type(enum PatentManager.State)"
                        }
                      },
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "689:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum PatentManager.State"
                      }
                    },
                    "src": "681:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum PatentManager.State"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "681:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 46,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 37,
                    "name": "_manager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34,
                    "src": "657:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 38,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 36,
                  "name": "Managed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3346,
                  "src": "648:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Managed_$3346_$",
                    "typeString": "type(contract Managed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "648:18:0"
              }
            ],
            "name": "PatentManager",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "name": "_manager",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "611:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "611:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "610:18:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:0:0"
            },
            "scope": 175,
            "src": "588:258:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "1031:313:0",
              "statements": [
                {
                  "assignments": [
                    62
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62,
                      "name": "newPatent",
                      "nodeType": "VariableDeclaration",
                      "scope": 89,
                      "src": "1042:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 61,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1042:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 73,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1073:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1080:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1087:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 68,
                        "name": "_author",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1101:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "_patentType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1110:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 70,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4217,
                          "src": "1123:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1123:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1062:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$_t_address_$returns$_t_contract$_Patent_$3501_$",
                        "typeString": "function (string memory,string memory,string memory,string memory,uint8,address) returns (contract Patent)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 63,
                        "name": "Patent",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3501,
                        "src": "1066:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Patent_$3501",
                          "typeString": "contract Patent"
                        }
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1062:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Patent_$3501",
                      "typeString": "contract Patent"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1042:92:0"
                },
                {
                  "assignments": [
                    75
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75,
                      "name": "patentInfo",
                      "nodeType": "VariableDeclaration",
                      "scope": 89,
                      "src": "1145:31:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_newPatentData_$29_memory_ptr",
                        "typeString": "struct PatentManager.newPatentData memory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 74,
                        "name": "newPatentData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 29,
                        "src": "1145:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_newPatentData_$29_storage_ptr",
                          "typeString": "struct PatentManager.newPatentData storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 81,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "newPatent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "1217:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1248:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1278:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 76,
                      "name": "newPatentData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1179:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_newPatentData_$29_storage_ptr_$",
                        "typeString": "type(struct PatentManager.newPatentData storage pointer)"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "_address",
                      "_owned",
                      "_invested"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1179:115:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_newPatentData_$29_memory",
                      "typeString": "struct PatentManager.newPatentData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1145:149:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "patentInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "1326:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_newPatentData_$29_memory_ptr",
                          "typeString": "struct PatentManager.newPatentData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_newPatentData_$29_memory_ptr",
                          "typeString": "struct PatentManager.newPatentData memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 82,
                        "name": "deployedPatents",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1305:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_newPatentData_$29_storage_$dyn_storage",
                          "typeString": "struct PatentManager.newPatentData storage ref[] storage ref"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1305:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_newPatentData_$29_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct PatentManager.newPatentData storage ref) returns (uint256)"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1305:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1305:32:0"
                }
              ]
            },
            "documentation": null,
            "id": 89,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 59,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 58,
                  "name": "onlyManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3328,
                  "src": "1019:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1019:11:0"
              }
            ],
            "name": "createPatent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "928:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "942:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "942:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "956:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "956:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "name": "_author",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "977:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "_patentType",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "993:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "927:84:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1031:0:0"
            },
            "scope": 175,
            "src": "905:439:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "1398:158:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$12",
                          "typeString": "enum PatentManager.State"
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 93,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "1527:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$12",
                            "typeString": "enum PatentManager.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 94,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "1536:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                              "typeString": "type(enum PatentManager.State)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1536:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$12",
                            "typeString": "enum PatentManager.State"
                          }
                        },
                        "src": "1527:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 92,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4220,
                      "src": "1519:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1519:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1519:30:0"
                }
              ]
            },
            "documentation": null,
            "id": 100,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1366:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1398:0:0"
            },
            "scope": 175,
            "src": "1350:206:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1608:214:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 105,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1757:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum PatentManager.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1765:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                          "typeString": "type(enum PatentManager.State)"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Investing",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1765:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum PatentManager.State"
                      }
                    },
                    "src": "1757:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum PatentManager.State"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1757:23:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 110,
                      "name": "InvestmentsStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1795:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1795:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "EmitStatement",
                  "src": "1790:25:0"
                }
              ]
            },
            "documentation": null,
            "id": 114,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 103,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 102,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3390,
                  "src": "1591:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1591:9:0"
              }
            ],
            "name": "enableInvestments",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1588:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1608:0:0"
            },
            "scope": 175,
            "src": "1562:260:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "1890:324:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$12",
                          "typeString": "enum PatentManager.State"
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 124,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "1908:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$12",
                            "typeString": "enum PatentManager.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 125,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "1917:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                              "typeString": "type(enum PatentManager.State)"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Investing",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1917:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$12",
                            "typeString": "enum PatentManager.State"
                          }
                        },
                        "src": "1908:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4220,
                      "src": "1900:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1900:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 131,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "1951:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1960:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1951:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4220,
                      "src": "1943:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1943:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1943:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 138,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4236,
                                "src": "1988:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PatentManager_$175",
                                  "typeString": "contract PatentManager"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PatentManager_$175",
                                  "typeString": "contract PatentManager"
                                }
                              ],
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1980:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1980:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1980:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2004:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1980:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 136,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4220,
                      "src": "1972:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1972:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1972:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 145,
                          "name": "deployedPatents",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "2016:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_newPatentData_$29_storage_$dyn_storage",
                            "typeString": "struct PatentManager.newPatentData storage ref[] storage ref"
                          }
                        },
                        "id": 147,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 146,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "2032:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2016:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_newPatentData_$29_storage",
                          "typeString": "struct PatentManager.newPatentData storage ref"
                        }
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_invested",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "2016:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 149,
                            "name": "deployedPatents",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2049:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_newPatentData_$29_storage_$dyn_storage",
                              "typeString": "struct PatentManager.newPatentData storage ref[] storage ref"
                            }
                          },
                          "id": 151,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 150,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "2065:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2049:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_newPatentData_$29_storage",
                            "typeString": "struct PatentManager.newPatentData storage ref"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_invested",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28,
                        "src": "2049:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 153,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "2082:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2049:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2016:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "2016:72:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 162,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "2138:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 157,
                            "name": "deployedPatents",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2099:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_newPatentData_$29_storage_$dyn_storage",
                              "typeString": "struct PatentManager.newPatentData storage ref[] storage ref"
                            }
                          },
                          "id": 159,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 158,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "2115:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2099:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_newPatentData_$29_storage",
                            "typeString": "struct PatentManager.newPatentData storage ref"
                          }
                        },
                        "id": 160,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "2099:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2099:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2099:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "2099:46:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 166,
                            "name": "deployedPatents",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2169:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_newPatentData_$29_storage_$dyn_storage",
                              "typeString": "struct PatentManager.newPatentData storage ref[] storage ref"
                            }
                          },
                          "id": 168,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 167,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "2185:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2169:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_newPatentData_$29_storage",
                            "typeString": "struct PatentManager.newPatentData storage ref"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "2169:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 170,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "2200:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 165,
                      "name": "Invested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "2160:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2160:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 172,
                  "nodeType": "EmitStatement",
                  "src": "2155:52:0"
                }
              ]
            },
            "documentation": null,
            "id": 174,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 121,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 120,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3390,
                  "src": "1880:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1880:9:0"
              }
            ],
            "name": "invest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "1844:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1844:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 118,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "1857:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1857:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1843:29:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1890:0:0"
            },
            "scope": 175,
            "src": "1828:386:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 176,
        "src": "144:2533:0"
      }
    ],
    "src": "0:2677:0"
  },
  "legacyAST": {
    "absolutePath": "/home/rewkha/work/SaveIdeas/saveideas/contract/contracts/PatentManager.sol",
    "exportedSymbols": {
      "PatentManager": [
        175
      ]
    },
    "id": 176,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "contracts/math/SafeMath.sol",
        "file": "contracts/math/SafeMath.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 176,
        "sourceUnit": 3273,
        "src": "25:37:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/ownership/Managed.sol",
        "file": "contracts/ownership/Managed.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 176,
        "sourceUnit": 3347,
        "src": "63:41:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/patent/Patent.sol",
        "file": "contracts/patent/Patent.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 176,
        "sourceUnit": 3502,
        "src": "105:37:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "Managed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3346,
              "src": "170:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Managed_$3346",
                "typeString": "contract Managed"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "170:7:0"
          }
        ],
        "contractDependencies": [
          3346,
          3408,
          3501
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 175,
        "linearizedBaseContracts": [
          175,
          3346,
          3408
        ],
        "name": "PatentManager",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 9,
            "libraryName": {
              "contractScope": null,
              "id": 7,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3272,
              "src": "190:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$3272",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "184:24:0",
            "typeName": {
              "id": 8,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "203:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "PatentManager.State",
            "id": 12,
            "members": [
              {
                "id": 10,
                "name": "Active",
                "nodeType": "EnumValue",
                "src": "227:6:0"
              },
              {
                "id": 11,
                "name": "Investing",
                "nodeType": "EnumValue",
                "src": "235:9:0"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "214:32:0"
          },
          {
            "constant": false,
            "id": 14,
            "name": "state",
            "nodeType": "VariableDeclaration",
            "scope": 175,
            "src": "252:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_State_$12",
              "typeString": "enum PatentManager.State"
            },
            "typeName": {
              "contractScope": null,
              "id": 13,
              "name": "State",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12,
              "src": "252:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_State_$12",
                "typeString": "enum PatentManager.State"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 16,
            "name": "InvestmentsStarted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:2:0"
            },
            "src": "277:27:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 22,
            "name": "Invested",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18,
                  "indexed": true,
                  "name": "beneficiary",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "324:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20,
                  "indexed": false,
                  "name": "weiAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "353:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "323:48:0"
            },
            "src": "309:63:0"
          },
          {
            "canonicalName": "PatentManager.newPatentData",
            "id": 29,
            "members": [
              {
                "constant": false,
                "id": 24,
                "name": "_address",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "469:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 23,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "469:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "name": "_owned",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "495:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 25,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "495:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 28,
                "name": "_invested",
                "nodeType": "VariableDeclaration",
                "scope": 29,
                "src": "516:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 27,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "516:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "newPatentData",
            "nodeType": "StructDefinition",
            "scope": 175,
            "src": "438:99:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 32,
            "name": "deployedPatents",
            "nodeType": "VariableDeclaration",
            "scope": 175,
            "src": "543:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_newPatentData_$29_storage_$dyn_storage",
              "typeString": "struct PatentManager.newPatentData storage ref[] storage ref"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 30,
                "name": "newPatentData",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 29,
                "src": "543:13:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_newPatentData_$29_storage_ptr",
                  "typeString": "struct PatentManager.newPatentData storage pointer"
                }
              },
              "id": 31,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "543:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_newPatentData_$29_storage_$dyn_storage_ptr",
                "typeString": "struct PatentManager.newPatentData storage ref[] storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "671:175:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 40,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "681:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum PatentManager.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 41,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "689:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                          "typeString": "type(enum PatentManager.State)"
                        }
                      },
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Active",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "689:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum PatentManager.State"
                      }
                    },
                    "src": "681:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum PatentManager.State"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "681:20:0"
                }
              ]
            },
            "documentation": null,
            "id": 46,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 37,
                    "name": "_manager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34,
                    "src": "657:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 38,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 36,
                  "name": "Managed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3346,
                  "src": "648:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Managed_$3346_$",
                    "typeString": "type(contract Managed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "648:18:0"
              }
            ],
            "name": "PatentManager",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "name": "_manager",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "611:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "611:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "610:18:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:0:0"
            },
            "scope": 175,
            "src": "588:258:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "1031:313:0",
              "statements": [
                {
                  "assignments": [
                    62
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 62,
                      "name": "newPatent",
                      "nodeType": "VariableDeclaration",
                      "scope": 89,
                      "src": "1042:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 61,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1042:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 73,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "_hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 48,
                        "src": "1073:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1080:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 67,
                        "name": "_description",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "1087:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 68,
                        "name": "_author",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54,
                        "src": "1101:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 69,
                        "name": "_patentType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1110:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 70,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4217,
                          "src": "1123:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 71,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1123:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1062:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint8_$_t_address_$returns$_t_contract$_Patent_$3501_$",
                        "typeString": "function (string memory,string memory,string memory,string memory,uint8,address) returns (contract Patent)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 63,
                        "name": "Patent",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 3501,
                        "src": "1066:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Patent_$3501",
                          "typeString": "contract Patent"
                        }
                      }
                    },
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1062:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Patent_$3501",
                      "typeString": "contract Patent"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1042:92:0"
                },
                {
                  "assignments": [
                    75
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 75,
                      "name": "patentInfo",
                      "nodeType": "VariableDeclaration",
                      "scope": 89,
                      "src": "1145:31:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_newPatentData_$29_memory_ptr",
                        "typeString": "struct PatentManager.newPatentData memory"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 74,
                        "name": "newPatentData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 29,
                        "src": "1145:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_newPatentData_$29_storage_ptr",
                          "typeString": "struct PatentManager.newPatentData storage pointer"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 81,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 77,
                        "name": "newPatent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "1217:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616c7365",
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1248:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1278:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": null,
                      "id": 76,
                      "name": "newPatentData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1179:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_newPatentData_$29_storage_ptr_$",
                        "typeString": "type(struct PatentManager.newPatentData storage pointer)"
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "_address",
                      "_owned",
                      "_invested"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1179:115:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_newPatentData_$29_memory",
                      "typeString": "struct PatentManager.newPatentData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1145:149:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 85,
                        "name": "patentInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 75,
                        "src": "1326:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_newPatentData_$29_memory_ptr",
                          "typeString": "struct PatentManager.newPatentData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_newPatentData_$29_memory_ptr",
                          "typeString": "struct PatentManager.newPatentData memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 82,
                        "name": "deployedPatents",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1305:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_newPatentData_$29_storage_$dyn_storage",
                          "typeString": "struct PatentManager.newPatentData storage ref[] storage ref"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1305:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_newPatentData_$29_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct PatentManager.newPatentData storage ref) returns (uint256)"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1305:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1305:32:0"
                }
              ]
            },
            "documentation": null,
            "id": 89,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 59,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 58,
                  "name": "onlyManager",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3328,
                  "src": "1019:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1019:11:0"
              }
            ],
            "name": "createPatent",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "name": "_hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "928:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "928:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "942:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "942:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "name": "_description",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "956:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "956:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54,
                  "name": "_author",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "977:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "_patentType",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "993:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "927:84:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1031:0:0"
            },
            "scope": 175,
            "src": "905:439:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "1398:158:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$12",
                          "typeString": "enum PatentManager.State"
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 93,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "1527:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$12",
                            "typeString": "enum PatentManager.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 94,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "1536:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                              "typeString": "type(enum PatentManager.State)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Active",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1536:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$12",
                            "typeString": "enum PatentManager.State"
                          }
                        },
                        "src": "1527:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 92,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4220,
                      "src": "1519:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1519:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1519:30:0"
                }
              ]
            },
            "documentation": null,
            "id": 100,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1366:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1398:0:0"
            },
            "scope": 175,
            "src": "1350:206:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "1608:214:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 105,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1757:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum PatentManager.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 106,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1765:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                          "typeString": "type(enum PatentManager.State)"
                        }
                      },
                      "id": 107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Investing",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1765:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$12",
                        "typeString": "enum PatentManager.State"
                      }
                    },
                    "src": "1757:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$12",
                      "typeString": "enum PatentManager.State"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1757:23:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 110,
                      "name": "InvestmentsStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1795:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1795:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "EmitStatement",
                  "src": "1790:25:0"
                }
              ]
            },
            "documentation": null,
            "id": 114,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 103,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 102,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3390,
                  "src": "1591:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1591:9:0"
              }
            ],
            "name": "enableInvestments",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1588:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1608:0:0"
            },
            "scope": 175,
            "src": "1562:260:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 173,
              "nodeType": "Block",
              "src": "1890:324:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$12",
                          "typeString": "enum PatentManager.State"
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 124,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "1908:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$12",
                            "typeString": "enum PatentManager.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 125,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12,
                            "src": "1917:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$12_$",
                              "typeString": "type(enum PatentManager.State)"
                            }
                          },
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Investing",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1917:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$12",
                            "typeString": "enum PatentManager.State"
                          }
                        },
                        "src": "1908:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4220,
                      "src": "1900:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1900:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "1900:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 131,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "1951:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1960:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1951:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 130,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4220,
                      "src": "1943:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1943:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1943:19:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 138,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4236,
                                "src": "1988:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PatentManager_$175",
                                  "typeString": "contract PatentManager"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PatentManager_$175",
                                  "typeString": "contract PatentManager"
                                }
                              ],
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1980:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1980:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1980:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2004:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1980:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 136,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4220,
                      "src": "1972:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1972:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1972:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 145,
                          "name": "deployedPatents",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "2016:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_newPatentData_$29_storage_$dyn_storage",
                            "typeString": "struct PatentManager.newPatentData storage ref[] storage ref"
                          }
                        },
                        "id": 147,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 146,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116,
                          "src": "2032:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2016:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_newPatentData_$29_storage",
                          "typeString": "struct PatentManager.newPatentData storage ref"
                        }
                      },
                      "id": 148,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_invested",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28,
                      "src": "2016:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 149,
                            "name": "deployedPatents",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2049:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_newPatentData_$29_storage_$dyn_storage",
                              "typeString": "struct PatentManager.newPatentData storage ref[] storage ref"
                            }
                          },
                          "id": 151,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 150,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "2065:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2049:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_newPatentData_$29_storage",
                            "typeString": "struct PatentManager.newPatentData storage ref"
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_invested",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28,
                        "src": "2049:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 153,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "2082:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2049:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2016:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "2016:72:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 162,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "2138:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 157,
                            "name": "deployedPatents",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2099:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_newPatentData_$29_storage_$dyn_storage",
                              "typeString": "struct PatentManager.newPatentData storage ref[] storage ref"
                            }
                          },
                          "id": 159,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 158,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "2115:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2099:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_newPatentData_$29_storage",
                            "typeString": "struct PatentManager.newPatentData storage ref"
                          }
                        },
                        "id": 160,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "2099:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2099:38:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2099:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "2099:46:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 166,
                            "name": "deployedPatents",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "2169:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_newPatentData_$29_storage_$dyn_storage",
                              "typeString": "struct PatentManager.newPatentData storage ref[] storage ref"
                            }
                          },
                          "id": 168,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 167,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116,
                            "src": "2185:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2169:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_newPatentData_$29_storage",
                            "typeString": "struct PatentManager.newPatentData storage ref"
                          }
                        },
                        "id": 169,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_address",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 24,
                        "src": "2169:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 170,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "2200:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 165,
                      "name": "Invested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "2160:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2160:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 172,
                  "nodeType": "EmitStatement",
                  "src": "2155:52:0"
                }
              ]
            },
            "documentation": null,
            "id": 174,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 121,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 120,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3390,
                  "src": "1880:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1880:9:0"
              }
            ],
            "name": "invest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "1844:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1844:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 118,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 174,
                  "src": "1857:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1857:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1843:29:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1890:0:0"
            },
            "scope": 175,
            "src": "1828:386:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 176,
        "src": "144:2533:0"
      }
    ],
    "src": "0:2677:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.21+commit.dfe3193c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-04T22:14:18.483Z"
}